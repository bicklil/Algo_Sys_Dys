#USE "course.lib"

VAL INT null IS (-1):
VAL INT jeton IS (-2):
PROTOCOL print IS INT;INT:

PROC nodeInRing(CHAN OF INT in,out, CHAN OF print aff, VAL INT id,VAL BOOL b)
  INT messIn, messOut,cpt:
  SEQ
    cpt := 0
    IF
      b
        messOut := jeton
      TRUE
        messOut := null
    SEQ i=0 FOR 10
      SEQ
        PAR
          in ? messIn
          out ! messOut
        cpt := cpt +1
        IF
          messIn = jeton
            SEQ
              messOut := jeton
              aff ! cpt;jeton
          TRUE
            messOut := null
:

PROC ringScreen([] CHAN OF print entree, CHAN OF BYTE sortie)
  INT id,mess:
  WHILE TRUE
    ALT i=0 FOR 4
      entree[i] ? id;mess
        SEQ
          out.int(i,0,sortie)
          sortie ! ' '
          out.int(id,0,sortie)
          sortie ! ' '
          out.int(mess,0,sortie)
          sortie ! '*n'
:

PROC MAIN(CHAN OF BYTE in,out,err)
  [4] CHAN OF print screenChan:
  [4] CHAN OF INT nodeChan:
  PAR
    nodeInRing(nodeChan[3],nodeChan[0],screenChan[0],0,TRUE)
    nodeInRing(nodeChan[0],nodeChan[1],screenChan[1],1,FALSE)
    nodeInRing(nodeChan[1],nodeChan[2],screenChan[2],2,FALSE)
    nodeInRing(nodeChan[2],nodeChan[3],screenChan[3],3,FALSE)
    ringScreen(screenChan,out)
:
