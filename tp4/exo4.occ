#USE "course.lib"

VAL INT null IS (-1):
VAL INT jeton IS (-2):
PROTOCOL print IS INT;INT;BOOL;INT:

PROC nodeInRing(CHAN OF INT in,out, CHAN OF print aff, VAL INT id,VAL INT nb)
  INT messIn, messOut,cpt,idLeader:
  BOOL IsLeader:
  SEQ
    idLeader := null
    messOut := nb
    IsLeader := FALSE
    SEQ i=0 FOR 4
      SEQ
        PAR
          in ? messIn
          out ! messOut
        IF
          messIn > nb
            messOut := messIn
          messIn = nb
            IsLeader := TRUE
          messIn < nb
            messOut := null
    
    IF
      IsLeader
        SEQ
          idLeader := id
          messOut := id
      TRUE
        messOut := null
    SEQ
      SEQ i=0 FOR 4
        SEQ
          PAR
            in ? messIn
            out ! messOut
          IF
            messIn <> null
              SEQ
                idLeader := messIn
                messOut := idLeader
            TRUE
              messOut := null
    IF
      IsLeader
        messOut := jeton
      TRUE
        messOut := null

    cpt := 0
    SEQ i=0 FOR 10
      SEQ
        PAR
          in ? messIn
          out ! messOut
        cpt := cpt +1
        IF
          messIn = jeton
            SEQ
              messOut := jeton
              aff ! cpt;jeton;IsLeader;idLeader
          TRUE
            messOut := null
:

PROC ringScreen([] CHAN OF print entree, CHAN OF BYTE sortie)
  INT id,mess,idleader:
  BOOL leader:
  WHILE TRUE
    ALT i=0 FOR 4
      entree[i] ? id;mess;leader;idleader
        SEQ
          out.int(i,0,sortie)
          sortie ! ' '
          out.int(id,0,sortie)
          sortie ! ' '
          out.int(mess,0,sortie)
          sortie ! ' '
          out.bool(leader,0,sortie)
          sortie ! ' '
          out.int(idleader,0,sortie)
          sortie ! '*n'
:

PROC MAIN(CHAN OF BYTE in,out,err)
  [4] CHAN OF print screenChan:
  [4] CHAN OF INT nodeChan:
  PAR
    nodeInRing(nodeChan[3],nodeChan[0],screenChan[0],0,12)
    nodeInRing(nodeChan[0],nodeChan[1],screenChan[1],1,42)
    nodeInRing(nodeChan[1],nodeChan[2],screenChan[2],2,17)
    nodeInRing(nodeChan[2],nodeChan[3],screenChan[3],3,5)
    ringScreen(screenChan,out)
:
